export default {
  common: {
    create: 'create',
    createFail: 'Failed to create',
    add: 'add',
    added: 'added',
    remove: 'remove',
    pin: 'pin',
    unpin: 'unpin',
    import: 'import',
    edit: 'edit',
    rename: 'rename',
    delete: 'delete',
    save: 'save',
    cancel: 'cancel',
    forgetIt: 'cancel',
    complete: 'Complete',
    close: 'Close',
    nextStep: 'Next step',
    saveSuccess: 'Saved successfully',
    enable: 'Enable',
    disabled: 'Disabled',
    confirm: 'confirm',
    config: 'config',
    search: 'search',
    preview: 'preview',
    end: '~ End ~',
    name: 'Name',
    username: 'username',
    account: 'account',
    login: 'Login',
    unlogin: `Didn't login yet`,
    register: 'register',
    logout: 'logout',
    copy: 'copy',
    welcome: 'Welcome to Quchat！',
    JoinVIP: 'Join VIP',
    days: 'days',
    purchase: 'purchase',
    type: 'Type',
  },
  chat: {
    createAgent: 'Create AI Agent',
    chatHistory: 'Chat history',
    newTopics: 'New topics',
    placeholderPC: `Let's talk about something... (Shift + Enter = Line break)`,
    placeholderMobile: `Let's talk about something...`,
    titleDeleteMessage: 'Delete message',
    comfirmDeleteMessage: 'Are you sure you want to delete this message?',
    showRawText: 'Show raw text',
    thinking: 'Thinking',
    clearChat: 'Clear Chat',
    comfirmClearChat: 'Are you sure you want to clear the chat history?',
  },
  createai: {
    myAgent: 'My Agent',
    myAgentDesc: 'Create your own exclusive AI agent based on your personal needs and private data.',

    myFLow: 'My Flow',
    myFLowDesc: 'Create an exclusive workflow based on your personal needs and private data.',

    defaultStarter: 'Hello! I will help you build a new GPT. \n You can say, "Help me create a GPT that can help me generate visual effects for new products" or "Have a software engineer help me format the code". \n\n What kind of GPT do you want to create?',

    deleteAgent: 'Delete agent',
    checkPermission: 'Share Agent',
    from: 'from',
    private: 'Private',
    inviteOnly: 'Invite only',
    everyone: 'Everyone',

    uploadPic: 'Upload picture',
    generate: 'generate',

    name: 'Name',
    nameDesc: 'The name of Agent',
    placeholderName: 'Give your Agent a name',

    desc: 'Description',
    descDesc: 'The description of Agent',
    placeholderDesc: 'Give your Agent a simply description',

    instructions: 'Instructions',
    instructionsDesc: 'The instructions of Agent',
    placeholderInstructions: 'Give your Agent a simply description',

    conversationStarters: 'Conversation starters',
    conversationStartersDesc: 'The conversation starters of Agent',
    placeholderConversationStarters: 'Give your Agent some conversation starters',

    startQuestion: 'Start questions',
    startQuestionDesc: 'Optional questions at the beginning of the conversation. If more than 3 are set, 3 of them will be randomly displayed to the user',

    autoSuggestion: 'Auto suggestion',
    autoSuggestionDescDisabled: 'After each robot reply, it will not provide user problem suggestions.',
    autoSuggestionDescEnabled: 'After the robot responds, it automatically provides suggestions based on the context, up to three suggestions.',
    customPrompt: 'Custom prompt',
    placeholderCustomPrompt: 'Add a concise role description for your Agent',

    knowledge: 'Knowledge',
    knowledgeSubtitle: 'Reference knowledge',
    knowledgeDesc: 'Additional files for this Agent to reference.',
    selectKnowledge: 'Select knowledge',

    capabilities: 'Capabilities',
    webBrowsing: 'Web Browsing',
    DALLEImageGeneration: 'DALL·E Image Generation',
  },
  square: {
    placeholderSearch: 'Enter keyword to search',
    recommend: '推荐',
  },
  share: {
    defaultTitle: 'Get reward with inviting friends',
    shareAgentTitle: 'You sharing Agent 【{name}】',
    copyedGoShare: 'Link copied, go share with friend!',
    inviteFriend: 'Invite friends',
    inviteFriendReward: 'invite friends',
    inviteFriendMobile: 'Get reward with inviting friends!',
    invite: 'Invite',
    invite2: 'friends to get',
    invite3: 'rewards of chat',
    copyLink: 'Copy link',
  },
  knowledge: {
    createKnowledge: 'Create knowledge',
    knowledgeSubtitle: 'Import your own text data or write data in real-time through Webhook to enhance the context of LLM.',
    noDesc: 'Nothing of description',
    knowledgeList: 'Knowledge list',
    commonKnowledge: 'Common knowledge',
    commonKnowledgeDesc: 'Knowledge base can be created by importing files, webpage links, or manually entering text',
    subscriptionFromWebside: 'Subscription from website',
    subscriptionFromWebsideDesc: 'Update knowledge base content in real-time by subscribing to a web site',
    deleteComfirm: 'Are you sure to delete this knowledge? Data cannot be restored after deletion,!',

    createNewKnowledge: 'Create a new knowledge',
    nameOfKnowledge: 'Name of knowledge',
    placeholderNameOfKnowledge: 'Please type in the name of knowledge',

    createFail: 'Fail with create knowledge',

    dataset: 'Dataset',
    searchTest: 'Search test',

    files: 'Files',

    datasetManual: 'Manual dataset',
    datasetFile: 'File dataset',
    datasetTxt: 'Text dataset',
    datasetLink: 'Link dataset',

    placeholderInputTxt: 'Please type in the content',
    createFolder: 'create folder',
    placeholderCreateFolder: 'Please type in the name of folder',
    createFolderDesc: 'Folder will be used to organize dataset',
    placeholderCreateDataset: 'Please type in the name of dataset',
    createDatasetManual: 'Create manual dataset',
    createDatasetManualDesc: 'Manual datasets allow the creation of an empty container to load data',
    createDatasetTxt: 'Create text dataset',
    createDatasetTxtDesc: 'Create a text dataset',
    createDatasetLink: 'Create link dataset',
    placeholderCreateLink: 'Please type in the link',

    singleTextTest: 'Single text test',
    searchType: 'Search type',
    defaultSearchType: 'name',

    semantic: 'Semantic',
    semanticDesc: 'Using vectors for text relevance queries',
    fullText: 'Full text',
    fullTextDesc: 'Using traditional full-text search is suitable for searching for data with specific keywords and subject predicate relationships',
    hybrid: 'Hybrid',
    hybridDesc: 'Return the comprehensive results of vector retrieval and full-text retrieval, and use the RRF algorithm for sorting',

    test: 'Test',
    testHistory: 'Test history',
    placeholderInputTest: 'Enter the text to be tested',
    comfirmDeleteTestHistory: 'Are you sure you want to delete the current history?',

    testParams: 'Parameters',
    searchPattern: 'Pattern',
    referLimit: 'Reference limit',
    referLimitDesc: 'The maximum number of tokens for word search, approximately 1 word in Chinese approximately 1 character=1.7Tokens, English approximately 1 character=1Tokens',
    minRelevance: 'Min relevance',
    minRelevanceDesc: 'The correlation of different index models varies. Please choose the appropriate value through search testing. When using ReRank, the correlation may be very low',
    resultResort: 'Resort',
    problemOptimization: 'Optimization',
    problemOptimizationDesc: 'Enabling the problem completion function can improve the accuracy of knowledge base search during continuous conversations. After enabling this function, when searching the knowledge base, AI will be used to fill in the missing information of the problem based on the conversation records.',

    useProblemComplete: 'Use problem completion',
    AIModel: 'AI Model',
    chatBgDesc: 'Chat background description',
    chatBgDescDesc: 'Describe the scope of the current conversation to facilitate AI completion and expansion of the current problem',
    placeholderChatBgDescDesc: `For example:
Regarding the introduction and usage of Python.
The current conversation is related to the game GTA5.`,

    resResort: 'Result resort',
    resResortDesc: 'The maximum number of tokens for word search,',


    searchFilter: 'Search filter',

    testRes: 'Test results',
    testResDesc: 'Sort based on the similarity between the knowledge base content and the test text, and you can adjust the corresponding text according to the test results. Attention: The data in the test record may have been modified. Clicking on a test data will display the latest data.',
    referLength: 'Reference length',
    testResShow: 'The test results will be displayed here',

    searchConfigTitle: 'Knowledge search configuration',

    uploadFileTitle: 'Click or drag the file to the area to upload',
    uploadFileSubtitle: 'supports file type with {msg}',
    uploadFileSubtitle2: 'Supports up to {msg} files. Maximum of {msg2} MB per file',
    totalFiles: 'total {msg} files',

    DataProcessingParams: 'Data processing parameters',
    contentSplit: 'Content split',
    idealBlockLength: 'Ideal block length',
    idealBlockLengthDesc: 'Divide according to the accommodation symbol. We suggest that your document should use punctuation appropriately to ensure that the length of each complete sentence does not exceed this value',
    idealBlockLengthDescCN: 'Chinese document recommendation {msg}-{msg2}',
    idealBlockLengthDescEN: 'English document recommendation {msg}-{msg2}',

    customDelimiter: 'Custom delimiter',
    customDelimiterDesc: 'Allow you to block based on custom delimiters. Usually used for processed data, using specific delimiters to accurately block.',

    informationExtraction: 'Information extraction',

    totalSegmentation: 'Total segmentation',
    totalLength: 'Total length',

    regeneratePreview: 'Regenerate preview',
    segmentedPreview: 'Segmented preview',
    extractPreview: 'Extract preview',
    length: 'Length',
    abstract: 'Abstract',
    qa: 'Q&A',
    question: 'Question',
    answer: 'Answer',

    characterTextSplitter: 'Character splitter',
    characterTextSplitterDesc: 'After segmenting the text according to certain rules, it is transformed into a format that can be used for semantic search, which is suitable for the vast majority of scenarios. No need to call the model for additional processing, low cost.',
    enhance: 'Enhance',
    enhanceDesc: 'By using sub indexes and calling models to generate relevant issues and summaries, the semantic richness of data blocks can be increased, which is more conducive to retrieval. Need to consume more storage space and increase the number of AI calls.',
    qaSplit: 'Q&A splitter',
    qaSplitDesc: 'According to certain rules, split the text into a larger paragraph and call AI to generate a question and answer pair for that paragraph. It has very high retrieval accuracy, but it will lose a lot of content details.',

    auto: 'Auto',
    autoDesc: 'Automatically set segmentation and preprocessing rules',
    customRule: 'Custom rule',
    customRuleDesc: 'Customize scoring and preprocessing rules',

    extractSummary: 'Extract summary',
    extractSummaryDesc: 'Automatically extract information from text',
    qaExtraction: 'Q&A extraction',
    qaExtractionDesc: 'Convert text into question and answer pairs',

    indexCreating: '索引创建中',
  },
  vip: {
    notVIP: `Didn't join VIP yet`,
    joinVIP: 'Join VIP',
    joinVIPKey: 'Join VIP with CDKey',
    support: 'support',
    proEdition: 'pro Edition',
    ability1: 'Daily chat count',
    ability2: 'Advanced features for Agent',
    ability3: 'Number of roles can be created',
    ability4: 'Can use character types',
    ability5: 'Number of knowledges can be created',
    order1: {
      title: 'Yearly VIP plus',
      subtitle: "As low as ¥1.09/day",
    },
    order2: {
      title: 'Yearly VIP pro',
      subtitle: "Limited time discount of ¥1998",
    },
    order3: {
      title: 'Monthly VIP plus',
      subtitle: "Chat freely with Agents",
    },
    order4: {
      title: 'Monthly VIP pro',
      subtitle: "Could create more intelligent Agents",
    },
  },
  setting: {
    title: 'Settings',
    menu: {
      label1: 'User settings',
      avatar: 'Avatar',
      nickname: 'Nickname',
      placeholderNickname: 'Please type in nickname',
      theme: 'Theme',
      themeDay: 'Light',
      themeNight: 'Dark',
      lang: 'Language',
      langZhCN: 'Simplified Chinese',
      langEn: 'English',

      label2: 'Invite friends',
      inviteHistory: 'Invite history',
      registerTime: 'register time',
      award: 'award',

      label3: 'My orders',
      orderNumber: 'Order number',
      vipSet: 'vip set',
      money: 'money',
      payTime: 'pay time',
      expire: 'expire time',

      label4: 'CDKeys',
      activateVIP: 'Activate VIP (contact admin for require)',
      placeholderActivateVIP: 'Please type in CDKey',
      activate: 'activate',
      activatedHistory: 'Activated history',
      CDKey: 'CDKey',
      bindSet: 'VIP Set',
      activateDate: 'Activate date',

      label5: 'About us',
      subTitle5: 'Talk to 300+AI think tanks or train your own AI team',
      otherInformation: 'Other information',
      Email: 'Email',
      contactCustomerService: 'Contact customer service',
    },
  },
  navigator: {
    chat: 'Chat',
    square: 'Square',
    create: 'Create',
    knowledge: 'Knowledge',
  },
  login: {
    wechat: 'Login with Wechat qrcode',
    backLoginEmail: 'Login with Email',
    getVerifyCode: 'Get verify code',
    resend: 'Resend',
    placeholderEmail: 'Please type in Email',
    placeholderPwd: 'Please type in Password',
    placeholderPwdComfirm: 'Plase type in password again',
    placeholderVerify: 'Plase type in verify code',
    placeholderInviteCode: 'Invitation code if you have',
    AgreeWhenLogin: 'Agree when login',
    serviceAgreement: '《{msg} Service Agreement》',
    forgetPwd: 'forget password?',
    thirdPartyLogin: 'Third party login',
    errEmail: 'Please enter a valid Email format',
    errPwdLength: 'The password is between 4 and 16 characters',
    errGetWechatQRCode: 'Failed to get Wechat qrcode',
    validEmail: 'Valid Email',
  },
}
